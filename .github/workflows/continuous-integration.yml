# GitHub Actions Documentation: https://docs.github.com/en/actions

name: "build"

on: ["pull_request", "push"]

env:
  COMPOSER_ROOT_VERSION: "1.99.99"

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v1"

      - name: "Check syntax (php-parallel-lint)"
        run: "composer dev:lint:syntax"

      - name: "Check coding standards (PHP_CodeSniffer)"
        run: "composer dev:lint:style"

  static-analysis:
    name: "Static analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v1"

      - name: "Statically analyze code (PHPStan)"
        run: "composer dev:analyze:phpstan"

      - name: "Statically analyze code (Psalm)"
        run: "composer dev:analyze:psalm -- --shepherd"

  security-analysis:
    name: "Security analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v1"

      - name: "Analyze security of code (Psalm)"
        run: "./vendor/bin/psalm --taint-analysis --report=build/logs/psalm.sarif"

      - name: "Upload security analysis results to GitHub"
        uses: "github/codeql-action/upload-sarif@v1"
        with:
          sarif_file: "build/logs/psalm.sarif"

  code-coverage:
    name: "Code coverage"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"

      - name: "Install Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"

      - name: "Install Python Pygments"
        run: "pip install Pygments==2.8"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "latest"
          coverage: "pcov"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v1"

      - name: "Run unit tests (PHPUnit)"
        run: "composer dev:test:coverage:ci"

      - name: "Publish coverage report to Codecov"
        uses: "codecov/codecov-action@v1"

  unit-tests:
    name: "Unit tests for PHP ${{ matrix.php-version }} with Pygments ${{ matrix.pygments-version }} on Python ${{ matrix.python-version }} and ${{ matrix.composer-dependencies }} Composer dependencies"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
        dependencies:
          - "lowest"
          - "highest"
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
        pygments-version:
          - "1.6"
          - "2.0"
          - "2.1"
          - "2.2"
          - "2.3"
          - "2.4"
          - "2.5.2"
          - "2.6"
          - "2.7.3"
          - "2.8"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Install Python Pygments"
        run: "pip install Pygments==${{ matrix.pygments-version }}"

      - name: "Run unit tests (PHPUnit)"
        run: "composer dev:test:unit"
